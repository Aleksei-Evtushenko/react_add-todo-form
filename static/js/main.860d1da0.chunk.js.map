{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUser","UserId","usersFromServer","find","visibleTodos","userId","App","useState","todoInfo","setTodoInfo","selectedUserId","setSelectedUserId","todoInfoError","setTodoInfoError","selectedUserIdError","setSelectedUserIdError","action","method","onSubmit","event","preventDefault","newTodo","length","push","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.860d1da0.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user\n        ? <UserInfo user={user} />\n        : 'no user'}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nfunction getUser(UserId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === UserId);\n\n  return foundUser || null;\n}\n\nexport const visibleTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todoInfo, setTodoInfo] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todoInfoError, setTodoInfoError] = useState(false);\n  const [selectedUserIdError, setSelectedUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoInfo(event.target.value);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (todoInfo && selectedUserId) {\n      const newTodo: Todo = {\n        id: visibleTodos.length + 1,\n        userId: selectedUserId,\n        title: todoInfo,\n        completed: false,\n        user: getUser(selectedUserId),\n      };\n\n      visibleTodos.push(newTodo);\n      setTodoInfo('');\n    } else {\n      setTodoInfoError(!todoInfo);\n      setSelectedUserIdError(!selectedUserId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoInfo}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {todoInfoError && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {selectedUserIdError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}